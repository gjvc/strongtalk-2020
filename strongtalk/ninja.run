#! /usr/bin/env bash

# vim: syntax=bash

# bash ------------------------------------------------------------------------

set -o errexit -o nounset -o pipefail


# location --------------------------------------------------------------------

readonly _REALPATH=$(realpath "${BASH_SOURCE[ 0 ]}")
readonly _BASENAME=$(basename "${_REALPATH}")
readonly _DIRNAME=$(dirname "${_REALPATH}")
readonly _ROOT=$(dirname "${_DIRNAME}")
readonly _PREFIX=$(dirname "${_ROOT}")


# object root -----------------------------------------------------------------

arch="i686"
platform="w64-mingw32"
compiler_family="gcc"
compiler_version="10"
runtime="posix"
toolchain_name="${arch}-${platform}-${compiler_family}-${compiler_version}-${runtime}"
build_type="debug"
object_root="${_DIRNAME}/obj/${toolchain_name}/cmake/${build_type}/src"


# logging ---------------------------------------------------------------------

function banner() {
echo
echo
echo "-----------------------------------------------------------------------------"
echo ">>> ${@}"
echo "-----------------------------------------------------------------------------"
echo
}


# generate and build ----------------------------------------------------------

banner ccache
CCACHE_DIR=${_DIRNAME}/.ccache ccache --show-stats


# generate --------------------------------------------------------------------

banner cmake
[[ -d "${object_root}" ]] && rm -rf "${object_root}"
cmake \
    -D CMAKE_BUILD_TYPE=Debug \
    -G Ninja \
    -S . \
    -B "${object_root}"


# build -----------------------------------------------------------------------

banner ninja
ninja \
    -C "${object_root}" \
    -k 0

banner result
ls -al "${object_root}/"*.{a,exe} | column -t


banner ccache
CCACHE_DIR=${_DIRNAME}/.ccache ccache --show-stats
CCACHE_DIR=${_DIRNAME}/.ccache ccache --zero-stats

banner complete
