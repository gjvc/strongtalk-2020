
#
# src/cmake/strongtalk-custom-functions.cmake ---------------------------------
#
#


function ( strongtalk_target_compile_options _target )

  if ( "${CMAKE_CXX_COMPILER_ID}" MATCHES "Clang" )

    target_compile_options ( ${_target} PUBLIC -fno-inline )
    target_compile_options ( ${_target} PUBLIC -fno-omit-frame-pointer )
    target_compile_options ( ${_target} PUBLIC -fno-optimize-sibling-calls )
#    target_compile_options ( ${_target} PUBLIC -fuse-ld=ld.lld )

    #  target_compile_options ( ${_target} PUBLIC -fsanitize=address )
    #  target_compile_options ( ${_target} PUBLIC -fstack-protector-all )
    target_compile_options ( ${_target} PUBLIC -ferror-limit=999 )

    #target_compile_options ( ${_target} PUBLIC -Werror )
    target_compile_options ( ${_target} PUBLIC -Warray-bounds )
    target_compile_options ( ${_target} PUBLIC -Wcast-qual )
    target_compile_options ( ${_target} PUBLIC -Wno-address-of-temporary )
    target_compile_options ( ${_target} PUBLIC -Wno-bitwise-op-parentheses )
    target_compile_options ( ${_target} PUBLIC -Wno-cast-align )
    target_compile_options ( ${_target} PUBLIC -Wno-char-subscripts )
    target_compile_options ( ${_target} PUBLIC -Wno-constant-conversion )
    target_compile_options ( ${_target} PUBLIC -Wno-ctor-dtor-privacy )
    target_compile_options ( ${_target} PUBLIC -Wno-dangling-else )
    target_compile_options ( ${_target} PUBLIC -Wno-delete-non-virtual-dtor )
    target_compile_options ( ${_target} PUBLIC -Wno-deprecated )
    target_compile_options ( ${_target} PUBLIC -Wno-disabled-optimization )
    target_compile_options ( ${_target} PUBLIC -Wno-error )
    target_compile_options ( ${_target} PUBLIC -Wno-extern-initializer )
    target_compile_options ( ${_target} PUBLIC -Wno-extra )
    target_compile_options ( ${_target} PUBLIC -Wno-extra-semi )
    target_compile_options ( ${_target} PUBLIC -Wno-format )
    target_compile_options ( ${_target} PUBLIC -Wno-init-self )
    target_compile_options ( ${_target} PUBLIC -Wno-logical-not-parentheses )
    target_compile_options ( ${_target} PUBLIC -Wno-logical-op-parentheses )
#    target_compile_options ( ${_target} PUBLIC -Wno-missing-declarations )
    target_compile_options ( ${_target} PUBLIC -Wno-missing-include-dirs )
    target_compile_options ( ${_target} PUBLIC -Wno-new-returns-null )
    target_compile_options ( ${_target} PUBLIC -Wno-null-arithmetic )
    target_compile_options ( ${_target} PUBLIC -Wno-null-conversion )
    target_compile_options ( ${_target} PUBLIC -Wno-old-style-cast )
    target_compile_options ( ${_target} PUBLIC -Wno-overloaded-shift-op-parentheses )
    target_compile_options ( ${_target} PUBLIC -Wno-overloaded-virtual )
    target_compile_options ( ${_target} PUBLIC -Wno-parentheses )
    target_compile_options ( ${_target} PUBLIC -Wno-parentheses-equality )
    target_compile_options ( ${_target} PUBLIC -Wno-redundant-decls )
    target_compile_options ( ${_target} PUBLIC -Wno-reorder )
    target_compile_options ( ${_target} PUBLIC -Wno-return-type )
    target_compile_options ( ${_target} PUBLIC -Wno-shadow )
    target_compile_options ( ${_target} PUBLIC -Wno-shadow-field-in-constructor-modified )
    target_compile_options ( ${_target} PUBLIC -Wno-shadow-ivar )
    target_compile_options ( ${_target} PUBLIC -Wno-shift-negative-value )
    target_compile_options ( ${_target} PUBLIC -Wno-shift-op-parentheses )
    target_compile_options ( ${_target} PUBLIC -Wno-sign-conversion )
    target_compile_options ( ${_target} PUBLIC -Wno-sign-promo )
    target_compile_options ( ${_target} PUBLIC -Wno-sometimes-uninitialized )
    target_compile_options ( ${_target} PUBLIC -Wno-strict-overflow=5 )
    target_compile_options ( ${_target} PUBLIC -Wno-switch )
    target_compile_options ( ${_target} PUBLIC -Wno-switch-default )
    target_compile_options ( ${_target} PUBLIC -Wno-tautological-constant-out-of-range-compare )
    target_compile_options ( ${_target} PUBLIC -Wno-tautological-undefined-compare )
    target_compile_options ( ${_target} PUBLIC -Wno-undef )
    target_compile_options ( ${_target} PUBLIC -Wno-undefined-bool-conversion )
#    target_compile_options ( ${_target} PUBLIC -Wno-uninitialized )
    target_compile_options ( ${_target} PUBLIC -Wno-unused-function )
    target_compile_options ( ${_target} PUBLIC -Wno-unused-parameter )
    target_compile_options ( ${_target} PUBLIC -Wno-unused-value )
    target_compile_options ( ${_target} PUBLIC -Wno-unused-variable )
    target_compile_options ( ${_target} PUBLIC -Wno-writable-strings )

  endif ()


  if ( "${CMAKE_CXX_COMPILER_ID}" MATCHES "GNU" )

    target_compile_options ( ${_target} PUBLIC -fpermissive )
#    target_compile_options ( ${_target} PUBLIC -Wall )
#    target_compile_options ( ${_target} PUBLIC -Wno-char-subscripts )
#    target_compile_options ( ${_target} PUBLIC -Wno-comment )
#    target_compile_options ( ${_target} PUBLIC -Wno-conversion-null )
#    target_compile_options ( ${_target} PUBLIC -Wno-delete-non-virtual-dtor )
#    target_compile_options ( ${_target} PUBLIC -Wno-maybe-uninitialized )
#    target_compile_options ( ${_target} PUBLIC -Wno-nonnull-compare )
#    target_compile_options ( ${_target} PUBLIC -Wno-parentheses )
#    target_compile_options ( ${_target} PUBLIC -Wno-pedantic )
#    target_compile_options ( ${_target} PUBLIC -Wno-reorder )
#    target_compile_options ( ${_target} PUBLIC -Wno-return-type )
#    target_compile_options ( ${_target} PUBLIC -Wno-sequence-point )
#    target_compile_options ( ${_target} PUBLIC -Wno-sign-compare )
#    target_compile_options ( ${_target} PUBLIC -Wno-switch )
#    target_compile_options ( ${_target} PUBLIC -Wno-unused-but-set-variable )
#    target_compile_options ( ${_target} PUBLIC -Wno-unused-function )
#    target_compile_options ( ${_target} PUBLIC -Wno-unused-value )
#    target_compile_options ( ${_target} PUBLIC -Wno-unused-variable )
#    target_compile_options ( ${_target} PUBLIC -Wno-write-strings )

  endif ()                             

endfunction()

