Class
copyWithSize:!
4174650!
copying!
4Int:Array[EX]! !
at:ifNil:!
6316541!
accessing!
2Int:[^X def]:E|X! !
atAllPut:!
4174184!
accessing!
0E:! !
#superclassTypeString!
IndexedInstanceVariables[E] |> VarSequenceableCollection[E]! !
#group!
base! !
#extensionsAreSubtypes!
true! !
#revision!
$Revision: 1.7 $! !
at:!
4173438!
accessing!
0Int:E! !
#categories!
accessing!
copying!
private!
converting!
file out! !
size!
4174520!
accessing!
0Int! !
copyGrownBy:!
34089601!
copying!
4Integer:Array[EX]! !
#comment!
Arrays are fixed length, mutable sequenceable collections.

%todo: stop using variable creation message and use the indexed ivar mixin

Subclass responsibilities:
    %responsibility copyWithSize:
        Subclasses with instance variables must extend (or implement, if they haven't) copyWithSize: to copy
        the instance variable values as needed to the copy, since copyWithSize: doesn't normally use the
        normal copy mechanism that uses #shallowCopy to transfer all instance variable values.

Tags: %BlueBook %User

(c) 1995-1997 Sun Microsystems, Inc. ALL RIGHTS RESERVED. 
Use and distribution of this software is subject to the terms of the attached source license.
! !
withAll:!
4175229!
copying!
0Cltn[E]:Array[E]! !
fileOutBodyOn:!
6316177!
file out!
0Dumper:! !
#typeArgumentString!
E ! !
#subtype!
true! !
#isGeneric!
true! !
,!
36159642!
copying!
0Collection:! !
#branded!
true! !
asArray!
6317048!
converting!
4Array[EX]! !
#abstract!
false! !
putNilAt:!
6316372!
accessing!
0Int:! !
at:put:!
4174018!
accessing!
0Int:E:E! !
with:!
4174963!
copying!
0E:Array[E]! !
at:ifAbsent:!
4173584!
accessing!
2Int:[^X def]:E|X! !
