Class
#categories!
comparison!
operations!
converting!
accessing!
restricted-double dispatching!
bit operations!
truncation and rounding!
iteration!
printing!
private!
constants!
benchmarking!
restricted-to large integers!
mathematical functions!
proxy operations!
restricted-to integers!
private-proxy double dispatching! !
factorial!
36439390!
mathematical functions!
0Int! !
printHexOn:!
36443483!
printing!
0CharOutputStream:! !
identityHash!
36432746!
accessing!
0Int! !
hexDigitAt:!
36432436!
accessing!
0Int:Character! !
negated!
36432873!
accessing!
0Int! !
zero!
36437572!
constants!
0Integer! !
#extensionsAreSubtypes!
true! !
remFromInteger:!
36448294!
restricted-double dispatching!
0Integer:Integer! !
floor!
36441943!
operations!
0Int! !
multiplyFromInteger:!
36447867!
restricted-double dispatching!
0Integer:Integer! !
bitXor:!
36435325!
bit operations!
4X:Self|X! !
nfib!
36439631!
mathematical functions!
0Int! !
hasBitsSet:!
36445234!
proxy operations!
0ExternalData:Boolean! !
addFromSmallInteger:!
36445762!
restricted-double dispatching!
0SmallInteger:Integer! !
bitInvert!
36434850!
bit operations!
0Int! !
+!
36440117!
operations!
4Number:X! !
-!
36440385!
operations!
4Number:X! !
#branded!
true! !
/!
36440663!
operations!
4Number:X! !
divideFromFloat:!
36446334!
restricted-double dispatching!
0Float:Number! !
externalBitAnd:!
36444554!
proxy operations!
0ExternalData:ExternalData! !
multiplyFromSmallInteger:!
36448057!
restricted-double dispatching!
0SmallInteger:Integer! !
to:do:!
36438671!
iteration!
0Int:[Int]:Object! !
hash!
36432317!
accessing!
0Int! !
printBareHexDigits:on:!
36442980!
printing!
0Int:CharOutputStream:! !
bitAt:!
36434447!
bit operations!
0Int:Int! !
numerator!
36433007!
accessing!
0Integer! !
#revision!
$Revision: 1.11 $! !
asLargeInteger!
36449348!
restricted-to large integers!
0LargeInteger! !
//!
36440937!
operations!
0Number:Int! !
rem:!
36442621!
operations!
4Number:X! !
rawBitShift:!
36435824!
bit operations!
0Int:Int! !
bitAnd:!
36434258!
bit operations!
4X:Self|X! !
denominator!
36432192!
accessing!
0Integer! !
ceiling!
36441820!
operations!
0Int! !
unit!
36437452!
constants!
0Integer! !
#comment!
%notes:
    - This class implements generalized algorithms that handle both large and small integers.
    -  >,>=,<= are not implemented here for generalized integers; the Magnitude versions
          are fine.  SmallInteger implements its own for efficiency.
    * When the generalized algorithms are written, they should be designed to coerce either or
          both of receiver and argument to largeinteger format if they are smallintegers, because
         the overflow/underflow code in SmallInteger depends on that.

Tags: %BlueBook %User

(c) 1995-1997 Sun Microsystems, Inc. ALL RIGHTS RESERVED. 
Use and distribution of this software is subject to the terms of the attached source license.
! !
gcd:!
36442064!
operations!
0Integer:Integer! !
printOn:radix:!
36443830!
printing!
0CharOutputStream:Int:! !
moduloFromSmallInteger:!
36447650!
restricted-double dispatching!
0SmallInteger:Integer! !
|!
36436190!
bit operations!
0:! !
@=!
36436805!
comparison!
0ExternalData:Boolean! !
asInteger!
36437992!
converting!
0Integer! !
asExternalProxy!
36437693!
converting!
0ExternalProxy! !
bitClear:!
36434697!
bit operations!
0X:Self|X! !
#group!
base! !
lessFromSmallInteger:!
36447187!
restricted-double dispatching!
0SmallInteger:Boolean! !
bitAndFromSmallInteger:!
36444171!
private-proxy double dispatching!
1SmallInteger:ExternalData! !
highBit!
36435514!
bit operations!
0SmallInt! !
bitAndFromInteger:!
36445989!
restricted-double dispatching!
0Integer:! !
bitOrFromInteger:!
36446162!
restricted-double dispatching!
0Integer:! !
=!
36436462!
comparison!
0Object:Boolean! !
addFromInteger:!
36445577!
restricted-double dispatching!
0Integer:Integer! !
subtractFromInteger:!
36448473!
restricted-double dispatching!
0Integer:Integer! !
allMask:!
36433922!
bit operations!
0Integer:Boolean! !
anyMask:!
36434091!
bit operations!
0Integer:Boolean! !
to:intervals:do:!
36438908!
iteration!
0Int:Int:[Int]:Object! !
sumTo:!
36433709!
benchmarking!
0Int:Int! !
externalBitOr:!
36444894!
proxy operations!
0ExternalData:ExternalData! !
equalFromInteger:!
36446583!
restricted-double dispatching!
0Integer:Boolean! !
bitOr:!
36434984!
bit operations!
4X:Self|X! !
abs!
36441636!
operations!
0Integer! !
truncated!
36442857!
operations!
0Int! !
bitShift:!
36435171!
bit operations!
0Int:Int! !
\\!
36441361!
operations!
4Number:X! !
*!
36439839!
operations!
4Number:X! !
to:by:do:!
36438301!
iteration!
0Int:Int:[Int]:Object! !
#superclassTypeString!
RationalNumber! !
<!
36436311!
comparison!
0Number:Boolean! !
subtractFromSmallInteger:!
36448663!
restricted-double dispatching!
0SmallInteger:Integer! !
@~=!
36437180!
comparison!
0ExternalData:Boolean! !
printOn:!
36443668!
printing!
0CharOutputStream:! !
equalFromSmallInteger:!
36446770!
restricted-double dispatching!
0SmallInteger:Boolean! !
noMask:!
36435659!
bit operations!
0Integer:Boolean! !
lessFromInteger:!
36447001!
restricted-double dispatching!
0Integer:Boolean! !
timesRepeat:!
36438120!
iteration!
0[]:Object! !
recurse!
36433530!
benchmarking!
0! !
asFloat!
36437856!
converting!
0Float! !
moduloFromInteger:!
36447416!
restricted-double dispatching!
0Integer:Integer! !
#subtype!
true! !
printBareHexOn:!
36443222!
printing!
0CharOutputStream:! !
benchFib!
36433136!
benchmarking!
0! !
#abstract!
true! !
printNonNegativeOn:radix:!
36448893!
restricted-to integers!
0CharOutputStream:Int:! !
rounded!
36449841!
truncation and rounding!
0Int! !
bitOrFromSmallInteger:!
36444376!
private-proxy double dispatching!
1SmallInteger:Int! !
