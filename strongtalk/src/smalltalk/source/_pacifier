Class
pacified:!
3545836!
accessing!
0Boolean:! !
#categories!
displaying!
initialization!
accessing!
event handling!
input focus! !
localDisplayOn:!
3544995!
displaying!
0Canvas:! !
pacified!
3545702!
accessing!
0Boolean! !
#superclassTypeString!
VisualWrapper! !
#group!
ui! !
mouseEvent:at:event:!
3546974!
event handling!
0Symbol:Point:UIEvent:Boolean! !
character:focus:event:!
3546138!
event handling!
0Character:Visual:UIEvent:Boolean! !
#extensionsAreSubtypes!
true! !
#revision!
$Revision: 1.1 $! !
#instanceVariableString!
pacified <Boolean>
containsFocus <Boolean>
	! !
containsFocus!
3547247!
input focus!
0Boolean! !
initialize!
3545189!
initialization!
0! !
keyUp:focus:event:!
3546699!
event handling!
0Symbol:Visual:UIEvent:Boolean! !
focusCandidatesDo:!
3547637!
input focus!
0[Visual]:! !
keyDown:focus:event:!
3546420!
event handling!
0Symbol:Visual:UIEvent:Boolean! !
containsFocus:!
3547451!
input focus!
0Boolean:! !
#subtype!
true! !
#branded!
true! !
#comment!
Pacifiers can be wrapped around any visual, and can 'pacify' that visual
according to blocks that it is parameterized by.  This can be used to make
visual read-only (and invisible) based on dynamic criteria.

Tags: %User %UI

(c) 1995-1997 Sun Microsystems, Inc. ALL RIGHTS RESERVED. 
Use and distribution of this software is subject to the terms of the attached source license
! !
#abstract!
false! !
enabled!
3545537!
accessing!
0Boolean! !
initializePart:pacified:!
3545346!
initialization!
0Visual:Boolean:! !
