Class
#categories!
initialize-release!
access!
changes!
stay constraints!
equality constraints!
printing! !
mark!
5358102!
access!
0! !
strongDefaultStay!
5362506!
stay constraints!
0! !
strongPreferredStay!
5362685!
stay constraints!
0! !
setValue:strength:!
5361554!
changes!
0::! !
#extensionsAreSubtypes!
true! !
removeConstraint:!
5358397!
access!
0:! !
walkStrength!
5359230!
access!
0! !
#group!
benchmark! !
stay:!
5358789!
access!
0:! !
setValue:!
5361316!
changes!
0:! !
constraints!
5357484!
access!
0! !
value!
5358943!
access!
0! !
#branded!
true! !
weakDefaultStay!
5362868!
stay constraints!
0! !
stay!
5358653!
access!
0! !
requireEquals:!
5363047!
equality constraints!
0:! !
determinedBy!
5357661!
access!
0! !
mark:!
5358239!
access!
0:! !
walkStrength:!
5359415!
access!
0:! !
requiredStay!
5362337!
stay constraints!
0! !
#superclassTypeString!
DeltaBlue! !
addConstraint:!
5357250!
access!
0:! !
longPrintOn:!
5363317!
printing!
0:! !
#revision!
$Revision: 1.1 $! !
preferredStay!
5362166!
stay constraints!
0! !
#instanceVariableString!
value constraints determinedBy walkStrength stay mark! !
printOn:!
5363826!
printing!
0:! !
initialize!
5356808!
initialize-release!
0! !
determinedBy:!
5357864!
access!
0:! !
value:!
5359077!
access!
0:! !
changeIn:strength:!
5359622!
changes!
0::! !
#subtype!
true! !
#comment!
I represent a constrained variable. In addition to my value, I maintain the structure of the constraint graph, the current dataflow graph, and various parameters of interest to the DeltaBlue incremental constraint solver.

Instance variables:
	value			my value; changed by constraints, read by client <Object>
	constraints		normal constraints that reference me <Array of Constraint>
	determinedBy	the constraint that currently determines
					my value (or nil if there isn''t one) <Constraint>
	walkStrength		my walkabout strength <Strength>
	stay			true if I am a planning-time constant <Boolean>
	mark			used by the planner to mark constraints <Number>
 (c) 1995-1997 Sun Microsystems, Inc. ALL RIGHTS RESERVED. 
Use and distribution of this software is subject to the terms of the attached source license.! !
#abstract!
false! !
release!
5357082!
initialize-release!
0! !
setAll:to:strength:!
5360178!
changes!
0:::! !
defaultStay!
5361999!
stay constraints!
0! !
shortPrintOn:!
5364049!
printing!
0:! !
