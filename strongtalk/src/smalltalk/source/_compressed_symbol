Class
#categories!
accessing!
copying!
private!
comparing!
file out!
coercing! !
equalsStr:!
738400!
private!
1Str:Boolean! !
#superclassTypeString!
IndexedByteInstanceVariables |> Symbol! !
#group!
base! !
asByteArray!
36031621!
coercing!
0! !
#extensionsAreSubtypes!
true! !
#revision!
$Revision: 1.3 $! !
at:!
737717!
accessing!
0Int:Character! !
size!
737957!
accessing!
0SmallInt! !
copy!
738270!
copying!
0Instance! !
unicodeAt:!
738105!
accessing!
0Int:Int! !
#subtype!
true! !
numberOfArguments!
36343631!
accessing!
0SmallInteger! !
#branded!
true! !
#comment!
CompressedSymbols contain only characters whose unicode values are < 256.

%todo: implement all the basic ops faster (<, at:, size, =, etc).  It would be nice to have a primitive that returned a sigma value (-1,0,1) based on the comparison; <,
        equality, & more etc would all be definable using it.

(c) 1995-1997 Sun Microsystems, Inc. ALL RIGHTS RESERVED. 
Use and distribution of this software is subject to the terms of the attached source license.   $Revision: 1.3 $
! !
#abstract!
true! !
fileOutSignature!
739059!
file out!
0Integer! !
compare:!
738811!
comparing!
0Str:Int! !
