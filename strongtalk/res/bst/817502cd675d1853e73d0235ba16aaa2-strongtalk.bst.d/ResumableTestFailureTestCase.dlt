Delta define: #ResumableTestFailureTestCase as: (
(Class subclassOf: 'TestCase' instanceVariables: '')) !

(Delta mirrorFor: #ResumableTestFailureTestCase) revision: '$Revision:$'!

(Delta mirrorFor: #ResumableTestFailureTestCase) group: 'SUnitTests'!

(Delta mirrorFor: #ResumableTestFailureTestCase)
comment: 
''!

! (Delta mirrorFor: #ResumableTestFailureTestCase) methodsFor: 'Not categorized' !


errorTest
	1 zork
			!

failureLog
	^SUnitNameResolver defaultLogDevice
			!

failureTest
	self
		assert: false description: 'You should see me' resumable: true; 
		assert: false description: 'You should see me too' resumable: true; 
		assert: false description: 'You should see me last' resumable: false; 
		assert: false description: 'You should not see me' resumable: true
			!

isLogging
	^false
			!

okTest
	self assert: true
			!

regularTestFailureTest
	self assert: false description: 'You should see me'
			!

resumableTestFailureTest
	self
		assert: false description: 'You should see me' resumable: true; 
		assert: false description: 'You should see me too' resumable: true; 
		assert: false description: 'You should see me last' resumable: false; 
		assert: false description: 'You should not see me' resumable: true
			!

testResumable
	| result suite |
	suite := TestSuite new.
	suite addTest: (self class selector: #errorTest).
	suite addTest: (self class selector: #regularTestFailureTest).
	suite addTest: (self class selector: #resumableTestFailureTest).
	suite addTest: (self class selector: #okTest).
	result := suite run.
	self assert: result failures size = 2;
		assert: result errors size = 1
			! !

