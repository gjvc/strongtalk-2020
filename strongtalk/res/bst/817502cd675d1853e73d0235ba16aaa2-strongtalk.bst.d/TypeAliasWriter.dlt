Delta define: #TypeAliasWriter as: (
(Class subclassOf: 'DefinitionWriter' instanceVariables: '')) !

(Delta mirrorFor: #TypeAliasWriter) revision: '$Revision: 1.1 $'!

(Delta mirrorFor: #TypeAliasWriter) group: 'reflection'!

(Delta mirrorFor: #TypeAliasWriter)
comment: 
'(c) 1995-1997 Sun Microsystems, Inc. ALL RIGHTS RESERVED. 
Use and distribution of this software is subject to the terms of the attached source license.'!

! (Delta mirrorFor: #TypeAliasWriter) methodsFor: 'unclassified' !


fileOutDefinition: s <Str> on: stream <WriteStream> ^ <Int>

	| pos <Int> |
	self assert: [self mirror isMeta not].
	stream
		nextPutAll: 'Delta let: #';
		nextPutAll: self mirror name;
		nextPutAll: ' be: ('; cr.
	pos := stream position.
	stream	
		nextPutAll: s;
		nextPutAll: ') !!'; 
		cr; cr.
	^pos
!

fileOutOn: stream <WriteStream> ^ <Int>

	| pos <Int> |
	self assert: [ self mirror isMeta not ].
	pos := stream position.
	self fileOutDefinition: self mirror definitionString on: stream.
	self fileOutRevision: self mirror revision on: stream.
	self fileOutGroup: self mirror group on: stream.
	self fileOutComment: self mirror comment on: stream.
	^pos
! !

