Delta define: #DeltaAndOr as: (
(Class subclassOf: 'DeltaExpression' instanceVariables: 'recv arg isAnd ')) !

(Delta mirrorFor: #DeltaAndOr) revision: '$Revision: 1.1 $'!

(Delta mirrorFor: #DeltaAndOr) group: 'ast'!

(Delta mirrorFor: #DeltaAndOr)
comment: 
'Generated by the rewriter.
 (c) 1995-1997 Sun Microsystems, Inc. ALL RIGHTS RESERVED. 
Use and distribution of this software is subject to the terms of the attached source license.'!

! (Delta mirrorFor: #DeltaAndOr) methodsFor: 'Unclassified' !


apply: aTool
    aTool andOrNode: self!

arg
    ^ arg!

if: expr and: block
    self assert: [expr isExpressionNode].
    self assert: [block isBlockNode].
    recv := expr.
    arg := block body.
    isAnd := true!

if: expr or: block
    self assert: [expr isExpressionNode].
    self assert: [block isBlockNode].
    recv := expr.
    arg := block body.
    isAnd := false!

isAnd
    ^ isAnd!

isAndOrNode
    ^ true!

komment
    "Generated by the rewriter."!

recv
    ^ recv! !

