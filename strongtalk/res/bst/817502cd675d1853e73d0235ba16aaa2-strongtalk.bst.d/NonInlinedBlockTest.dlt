Delta define: #NonInlinedBlockTest as: (
(Class subclassOf: 'TestCase' instanceVariables: 'a b c d')) !

(Delta mirrorFor: #NonInlinedBlockTest) revision: '$Revision:$'!

(Delta mirrorFor: #NonInlinedBlockTest) group: 'Unclassified'!

(Delta mirrorFor: #NonInlinedBlockTest)
comment: 
''!

! (Delta mirrorFor: #NonInlinedBlockTest) classSide methodsFor: 'instance creation' !


new

	^(super new)
		initialize;
		yourself! !

! (Delta mirrorFor: #NonInlinedBlockTest) methodsFor: 'initialize-release' !


initialize

	a := NIBA new.
	b := NIBB new.
	c := NIBC new.
	d :=NIBD new.! !

! (Delta mirrorFor: #NonInlinedBlockTest) methodsFor: 'testing' !


exercise2: nib value: value
	|set|
	set := Set new.
	nib do: [:val |
					|block|
					block := [val notNil].
					val assert: [block value].
					val notNil ifTrue: [set add: val]]
		value: value!

exercise: nib value: value
	|set|
	set := Set new.
	nib do: [:val | [:a | a isNil
									ifFalse: [set add: a].
								a assert: [a notNil]]
								value: val]
		value: value!

testSetup
	self exercise: a value: 1.
	self exercise: b value: 1.
	self exercise: c value: 1.
	self exercise: d value: 1!

testSetup2
	self exercise2: a value: 1.
	self exercise2: b value: 1.
	self exercise2: c value: 1.
	self exercise2: d value: 1!

testTrap

	self exercise: a value: 1.
	self exercise: a value: 1.0!

testTrap2

	self exercise2: a value: 1.
	self exercise2: a value: 1.0! !

