Delta define: #MetaProtocol as: (
(Class subclassOf: 'AbstractProtocol' instanceVariables: 'instanceProtocol <Protocol>
name <Symbol>')) !

(Delta mirrorFor: #MetaProtocol) revision: '$Revision: 1.5 $'!

(Delta mirrorFor: #MetaProtocol) group: 'reflection'!

(Delta mirrorFor: #MetaProtocol)
comment: 
'(c) 1995-1997 Sun Microsystems, Inc. ALL RIGHTS RESERVED. 
Use and distribution of this software is subject to the terms of the attached source license.'!

! (Delta mirrorFor: #MetaProtocol) methodsFor: 'Unclassified' !


classProtocol ^ <Class class>
"should be Metaclass"
	^Class!

instanceProtocol ^ <Protocol>

	^instanceProtocol
!

instanceProtocol: p <Protocol>

	instanceProtocol := p!

isMeta ^ <Boolean>

	^true!

name^  <Symbol>
    ^name!

name: n  <Symbol>
	name := n.
! !

