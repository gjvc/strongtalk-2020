Delta define: #ElementA as: (
(Class subclassOf: 'HTMLElement' instanceVariables: '')) !

(Delta mirrorFor: #ElementA) revision: '$Revision: 1.3 $'!

(Delta mirrorFor: #ElementA) group: 'HTML'!

(Delta mirrorFor: #ElementA)
comment: 
'(c) 1995-1997 Sun Microsystems, Inc. ALL RIGHTS RESERVED. 
Use and distribution of this software is subject to the terms of the attached source license.'!

! (Delta mirrorFor: #ElementA) methodsFor: 'building' !


buildFor: builder <HTMLBuilder>

	| p <Painter> |
	p := builder painter copy.
	p paint: builder linkPaint.
	p font: (p font newSpec underline: true) font.
	builder withPainter: p
		do: [	(self isLink or: [ self isDoit ])
						ifTrue: [ self buildLinkFor: builder ]
						ifFalse: [ super buildFor: builder ]
				]!

buildLinkFor: builder <HTMLBuilder>

	builder
		withGlyphTransformer:
			[ :gl <Glyph> |
					self wrap: gl builder: builder ]
		do: [ super buildFor: builder ]! !

! (Delta mirrorFor: #ElementA) methodsFor: 'private' !


wrap: gl <Glyph> builder: builder <HTMLBuilder>^<Glyph>

	^HTMLLink
		for: gl
		app: builder app
		element: self! !

! (Delta mirrorFor: #ElementA) methodsFor: 'accessing' !


doitAction ^<Str>

	^self attributeAt: #DOIT
!

isDoit ^<Boolean>
	"Is true if this is a Smalltalk doit.
		 (i.e. has an SMALLTALK_ACTION)"
	
	self attributeAt: #DOIT
			ifAbsent: [ ^false ].
	^true!

isLink ^<Boolean>
	"Is true if this is a link (i.e. has an HREF)"
	
	self attributeAt: #HREF
			ifAbsent: [ ^false ].
	^true!

url ^<URL>

	^URL for: (self attributeAt: #HREF)! !

! (Delta mirrorFor: #ElementA) methodsFor: 'restricted' !


activateAt: loc <Point> for: app <HTMLView>

	self isLink
		ifTrue: [	app activateLink: self at: loc ]
		ifFalse: [ self isDoit
							ifTrue: [	app doitAction: self doitAction ]
						]! !

! (Delta mirrorFor: #ElementA) methodsFor: 'iterating' !


linksDo: blk <[ElementA]>

	blk value: self
	"There shouldn't be any imbedded
		links, so just return"! !

