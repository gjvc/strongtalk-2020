Delta define: #MixinCompositionMirror as: (
(Class subclassOf: 'MixinMirror' instanceVariables: 'iMixin oMixin sourceInfo ')) !

(Delta mirrorFor: #MixinCompositionMirror) revision: '$Revision: 1.3 $'!

(Delta mirrorFor: #MixinCompositionMirror) group: 'reflection'!

(Delta mirrorFor: #MixinCompositionMirror)
comment: 
'(c) 1995-1997 Sun Microsystems, Inc. ALL RIGHTS RESERVED. 
Use and distribution of this software is subject to the terms of the attached source license.'!

! (Delta mirrorFor: #MixinCompositionMirror) classSide methodsFor: 'Unclassified' !


on: mixin <Mixin> ^ <Instance> 

"To be determined. We must have a way of using mixin as the key to find the source
level definition"

^self new
! !

! (Delta mirrorFor: #MixinCompositionMirror) methodsFor: 'Unclassified' !


comment  ^ <Str> 

self deltaHack.
self halt.
!

comment: c  <Str> 


self deltaHack.
self halt.
!

iMixin ^ <Mixin>
    ^iMixin!

inputMixin: im <Mixin >outputMixin: om <Mixin > ^ <Self>
    iMixin := im.
    oMixin := om.!

oMixin ^ <Mixin>
    ^oMixin!

rename: oldId <Symbol> to: newId <Symbol>

"rename in both mixins being composed"!

sourceInfo ^<MixinCompositionSourceHandler>

self deltaHack. "Not yet supported by the source database"
	"sourceInfo isNil 
		ifTrue: [ sourceInfo := MixinCompositionSourceHandler for: self ]."
	^sourceInfo!

|> c <ClassMirror > ^ <ClassMirror>
    ^self oMixin |> (self iMixin |> c)! !

