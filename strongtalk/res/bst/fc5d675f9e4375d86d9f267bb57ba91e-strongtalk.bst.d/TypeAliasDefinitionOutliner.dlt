Delta define: #TypeAliasDefinitionOutliner as: (
(Class subclassOf: 'CodeApp |> MirrorOutliner[TypeAliasMirror]' instanceVariables: '')) !

(Delta mirrorFor: #TypeAliasDefinitionOutliner) revision: '$Revision: 1.7 $'!

(Delta mirrorFor: #TypeAliasDefinitionOutliner) group: 'outliner'!

(Delta mirrorFor: #TypeAliasDefinitionOutliner)
comment: 
'(c) 1995-1997 Sun Microsystems, Inc. ALL RIGHTS RESERVED. 
Use and distribution of this software is subject to the terms of the attached source license.'!

! (Delta mirrorFor: #TypeAliasDefinitionOutliner) methodsFor: 'accessing' !


locator ^ <TypeAliasLocator>

^TypeAliasLocator new id: self mirror name
!

outlinerForLocator: loc <DeltaLocator[Mirror]> 

^self! !

! (Delta mirrorFor: #TypeAliasDefinitionOutliner) methodsFor: 'dependencies' !


update: aspect <Object> with: value <Object>

	self inSessionProcessDo: [
		aspect = #aliasString
			ifTrue: [	self aliasView notNil 
								ifTrue: [	self aliasView model: self aliasStringAsCharGlyphs ] ]
	]! !

! (Delta mirrorFor: #TypeAliasDefinitionOutliner) methodsFor: 'private' !


aliasStringAsCharGlyphs ^ <CharGlyphs>

	| painter <Painter> |
	painter := self useRichTextForSources 
		ifTrue: [ 		self typeExpressionPainter ]
		ifFalse: [	self codePainter ].
	^self standardTextForString: self mirror aliasString painter: painter!

aliasView ^ <TextView[Str]>

	^self codeView!

aliasView: v <TextView[Str]>

	self codeView: v!

buildClosedHeader ^ <Visual>

	^(StringGlyph for: 'Aliasing' painter: self sectionPainter) asVisual.

!

codeViewClass ^ <CodeView class>

^TypedCodeView
!

initialOpenState ^ <Boolean>

	^true
!

setCodeView

	self codeView: (self buildCodeViewGetModel: [ self aliasStringAsCharGlyphs ]
									setModelOnSuccess: [ :blk <[]> | self storeAliasAndOnSuccess: blk ]).!

storeAliasAndOnSuccess: blk <[]>
		
	| as <Str> eval <Str> constructor <Mirror> |
	self deltaHack.
	as := self charGlyphModelAsString: self aliasView.
	self mirror alias: as.
	blk value.
! !

