Delta define: #DefaultButtonWrapper as: (
(Class subclassOf: 'VisualWrapper' instanceVariables: 'button <Button>')) !

(Delta mirrorFor: #DefaultButtonWrapper) revision: '$Revision: 1.1 $'!

(Delta mirrorFor: #DefaultButtonWrapper) group: 'ui'!

(Delta mirrorFor: #DefaultButtonWrapper)
comment: 
'(c) 1996-1997 Sun Microsystems, Inc. ALL RIGHTS RESERVED. 
Use and distribution of this software is subject to the terms of the attached source license.   $Revision: 1.1 $'!

! (Delta mirrorFor: #DefaultButtonWrapper) methodsFor: 'accessing' !


button ^<Button>

	^button!

button: b <Button>

	button := b.
	b addDefaultStyle.! !

! (Delta mirrorFor: #DefaultButtonWrapper) methodsFor: 'event handling' !


keyDown: key <Symbol> focus: focus <Visual> event: ev <UIEvent> ^<Boolean>

	(super keyDown: key focus: focus event: ev)
		ifTrue: [ ^true ].

	key = #RETURN
		ifTrue: [	self button press.
						"Absorb any built-up repeat chars so we don't get behind"
						ev repeatCount: 0.
						^true ].
	^false! !

