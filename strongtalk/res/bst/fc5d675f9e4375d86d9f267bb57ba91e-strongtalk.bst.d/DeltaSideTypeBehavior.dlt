Delta define: #DeltaSideTypeBehavior as: (
(Class subclassOf: 'DeltaType' instanceVariables: '')) !

(Delta mirrorFor: #DeltaSideTypeBehavior) revision: '$Revision: 1.1 $'!

(Delta mirrorFor: #DeltaSideTypeBehavior) group: 'ast'!

(Delta mirrorFor: #DeltaSideTypeBehavior)
comment: 
'Perhaps this should just be a protocol. It represents the requirements of
a side type.

 (c) 1995-1997 Sun Microsystems, Inc. ALL RIGHTS RESERVED. 
Use and distribution of this software is subject to the terms of the attached source license.'!

! (Delta mirrorFor: #DeltaSideTypeBehavior) methodsFor: 'Unclassified' !


abstract ^ <Boolean>

self subclassResponsibility!

bareAttributes  ^ <Dict[Symbol,MsgSignature]>

self subclassResponsibility!

bareSecondaryAttributes  ^ <Dict[Symbol,MsgSignature]>

self subclassResponsibility!

branded ^ <Boolean>

self subclassResponsibility!

extensionsAreSubtypes ^ <Boolean>

self subclassResponsibility!

heirScope ^ <Scope>

self subclassResponsibility!

implementedPrivateProtocol ^ <Protocol>

self subclassResponsibility!

komment

"Perhaps this should just be a protocol. It represents the requirements of
a side type.
"!

localBareAttributes  ^ <Dict[Symbol,MsgSignature]>

self subclassResponsibility!

localBareSecondaryAttributes  ^ <Dict[Symbol,MsgSignature]>

self subclassResponsibility!

localScope ^ <Scope>
    
self subclassResponsibility!

monotonic ^ <Boolean>

self subclassResponsibility!

privateProtocol ^ <Protocol>

self subclassResponsibility!

rawPrimaryInterface

self subclassResponsibility!

rawSecondaryInterface

self subclassResponsibility!

selfClassTV ^ <TypeVar>

self subclassResponsibility!

selfPublicClassTV ^ <TypeVar>

self subclassResponsibility!

selfPublicTV ^ <TypeVar>

self subclassResponsibility!

selfTV ^ <TypeVar>

self subclassResponsibility!

subtype ^ <Boolean>

self subclassResponsibility!

typeOfInstances ^ <ObjectType>

self subclassResponsibility!

unimplementedMessages ^ <Set[Symbol]>

self subclassResponsibility!

wellFormed ^ <Boolean>

self subclassResponsibility! !

